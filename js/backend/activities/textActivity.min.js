function $(t){return document.getElementById(t)}function q(t){return document.querySelector(t)}function hideAfterDelay(t,e){null!=window.prevTimeOut&&(clearTimeout(prevTimeOut),window.prevTimeOut=null),window.prevTimeOut=setTimeout(()=>{t.classList.add("hidden"),window.prevTimeOut=null},e)}function showSnackbar(t,e=5e3){const n=q(".mdc-snackbar").MDCSnackbar;n.labelText=t,n.timeoutMs=e,n.open()}async function onStart(){console.log("<textCrypto> Started activity text"),q(".mdc-tab-bar").MDCTabBar.listen("MDCTabBar:activated",function(t){console.debug(`<textCrypto:TabBar> Tab selected: ${t.detail.index}`);const e=$("encryptContent"),n=$("decryptContent");switch(t.detail.index){case 0:console.debug("<textCrypto:TabBar> Content: Encrypt"),e.classList.remove("hidden"),e.classList.remove("contentSwitcher-outLeft"),n.classList.add("contentSwitcher-outRight"),hideAfterDelay(n,250);break;case 1:console.debug("<textCrypto:TabBar> Content: Decrypt"),n.classList.remove("hidden"),e.classList.add("contentSwitcher-outLeft"),n.classList.remove("contentSwitcher-outRight"),hideAfterDelay(e,250);break;default:console.error("<textCrypto:TabBar> Unknown tab selected!")}})}function onStop(){console.debug("<textCrypto> Deleting global vars..."),delete window.prevTimeOut,console.log("<textCrypto> Stopped activity text")}window.prevTimeOut=null;