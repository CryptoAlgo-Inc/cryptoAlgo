function $(e){return document.getElementById(e)}function q(e){return document.querySelector(e)}function hideAfterDelay(e,t){null!=window.prevTimeOut&&(clearTimeout(prevTimeOut),window.prevTimeOut=null),window.prevTimeOut=setTimeout(()=>{e.classList.add("hidden"),window.prevTimeOut=null},t)}function showSnackbar(e,t=5e3){const n=q(".mdc-snackbar").MDCSnackbar;n.labelText=e,n.timeoutMs=t,n.open()}async function onStart(){console.log("<textCrypto> Started activity text");let e=null;q(".mdc-tab-bar").MDCTabBar.listen("MDCTabBar:activated",function(e){console.debug(`<textCrypto:TabBar> Tab selected: ${e.detail.index}`);const t=$("encryptContent"),n=$("decryptContent");switch(e.detail.index){case 0:console.debug("<textCrypto:TabBar> Content: Encrypt"),t.classList.remove("hidden"),t.classList.remove("contentSwitcher-outLeft"),n.classList.add("contentSwitcher-outRight"),hideAfterDelay(n,250);break;case 1:console.debug("<textCrypto:TabBar> Content: Decrypt"),n.classList.remove("hidden"),t.classList.add("contentSwitcher-outLeft"),n.classList.remove("contentSwitcher-outRight"),hideAfterDelay(t,250);break;default:console.error("<textCrypto:TabBar> Unknown tab selected!")}}),$("enc-open-keyfile").onclick=(()=>{window.fileOps.fileOpen("Select AES Keyfile","Select Keyfile",["openFile"],[{name:"AES Keyfiles",extensions:[".aKey"]}]).then(t=>{t.canceled||(e=t.filePaths[0],$("enc-selected-key").textContent=`Currently selected keyfile: '${e.replace(/^.*\//gm,"")}'`,console.log(`<textCrypto> Selected one keyfile: ${e}`))})}),$("startEnc").onclick=(()=>{const t=$("text-to-enc").MDCTextField.value;0!==t.length?null!=e?window.aesCrypto.encrypt(t,e).then(e=>{$("encrypted-output").textContent=e.cipher+e.iv}):showSnackbar("No keyfile selected. Select one above or generate a new one."):showSnackbar("Text to encrypt is blank")})}function onStop(){console.debug("<textCrypto> Deleting global vars..."),delete window.prevTimeOut,console.log("<textCrypto> Stopped activity text")}window.prevTimeOut=null;