function $(e){return document.getElementById(e)}function q(e){return document.querySelector(e)}function showSnackbar(e,t=5e3){const c=q(".mdc-snackbar").MDCSnackbar;c.labelText=e,c.timeoutMs=t,c.open()}async function onStart(){console.log("<RSA-Activity> Started activity RSA");let e=null,t=null,c=null;const l=()=>{if($("selected-keyfile").textContent=null!=e?"Selected keyfile: "+e:"No selected keyfile",$("AESLoc").textContent=null!=t?"Selected AES keyfile: "+t:"No AES keyfile selected",$("outLoc").textContent=null!=c?"Selected output location: "+c:"No output location selected",e&&t&&c){const e=$("encButton"),c=$("decButton");t.match(/\.aKey$/gm)?(e.disabled=!1,c.disabled=!0):(e.disabled=!0,c.disabled=!1)}};$("selKeyfile").onclick=(()=>{window.fileOps.fileOpen("Select RSA Keyfile","Select Keyfile",["openFile"],[{name:"RSA Keypair",extensions:["pem"]}]).then(t=>{t.canceled?showSnackbar("RSA keypair file picker canceled"):(e=t.filePaths[0],l(),console.log("<RSA-Activity> Selected RSA keyfile:",e))})}),$("selAESKeyfile").onclick=(()=>{window.fileOps.fileOpen("Select encrypted/decrypted AES Keyfile","Select Keyfile",["openFile"],[{name:"AES Keyfile",extensions:["aKey"]},{name:"Encrypted AES Keyfile",extensions:["cryptKey"]}]).then(c=>{c.canceled?showSnackbar("RSA keypair file picker canceled"):(t=c.filePaths[0],l(),console.log("<RSA-Activity> Selected RSA keyfile:",e))})}),$("selOutLoc").onclick=(()=>{if(null==t)return void showSnackbar("Select the input AES keyfile first.");let n;n=t.match(/\.aKey$/gm)?{name:"Encrypted AES Keyfile",extensions:["cryptKey"]}:{name:"Decrypted AES Keyfile",extensions:["aKey"]},window.fileOps.filePick("Select location to save output file","Output file name: ",[],[n],t.replace(/(\..*)$/gm,"")).then(t=>{t.canceled?showSnackbar("Output file picker canceled"):(c=t.filePath,l(),console.log("<RSA-Activity> Selected RSA keyfile:",e))})}),$("encButton").onclick=(()=>{window.rsaCrypto.encrypt(e,t,c).then(e=>{showSnackbar(e?"Failed to encrypt AES keyfile. Check if public key is selected and valid.":"Encrypted AES keyfile saved at: "+c)}).catch(e=>{console.warn("<RSA-Activity:encrypt> Uncaught error from module:\n\n",e),showSnackbar("Failed to encrypt AES keyfile. Check if files are readable.")})}),$("decButton").onclick=(()=>{window.rsaCrypto.decrypt(e,$("priPWD").MDCTextField.value,t,c).then(e=>{e?showSnackbar("Failed to decrypt AES keyfile. Check if private key is selected, valid and password is correct.",6e3):showSnackbar("Decrypted AES keyfile saved at: "+c)}).catch(e=>{console.warn("<RSA-Activity:decrypt> Uncaught error from module:\n\n",e),showSnackbar("Failed to decrypt AES keyfile. Check if files are readable.")})})}function onStop(){console.log("<RSA-Activity> Exited activity RSA")}